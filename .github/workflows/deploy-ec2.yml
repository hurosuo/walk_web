name: deploy-to-ec2
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # ⬇️ 모든 run 스텝의 작업 디렉터리를 walk_web 로 고정
    defaults:
      run:
        working-directory: walk_web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Gradle로 JAR 생성 (Maven이면 해당 단계만 교체)
      - name: Build JAR
        run: ./gradlew clean bootJar -x test

      # SSH 키 세팅
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 호스트 키 등록(처음 접속시 Known hosts 에러 방지)
      - name: Add EC2 to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.EC2_SSH_PORT || 22 }}" "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      # EC2로 파일 전송: JAR + Dockerfile + compose + deploy.sh
      - name: Copy files to EC2
        run: |
          scp -P "${{ secrets.EC2_SSH_PORT || 22 }}" \
            ./build/libs/*.jar \
            ./Dockerfile \
            ./docker-compose.yml \
            ./deploy.sh \
            "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/"

      # EC2에서 원격 배포 실행
      - name: Remote deploy on EC2
        run: |
          ssh -p "${{ secrets.EC2_SSH_PORT || 22 }}" \
            "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}" \
            "bash ~/deploy.sh"
