name: deploy-to-ec2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # ‚¨áÔ∏è Î™®Îì† run Ïä§ÌÖùÏùò ÏûëÏóÖ ÎîîÎ†âÌÑ∞Î¶¨Î•º walk_web Î°ú Í≥†Ï†ï
    defaults:
      run:
        working-directory: walk_web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # ‚¨áÔ∏è Ïã§ÌñâÍ∂åÌïú Î∂ÄÏó¨ (Í∂åÌïú Î¨∏Ï†ú 126 Ìï¥Í≤∞)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # GradleÎ°ú JAR ÏÉùÏÑ± (MavenÏù¥Î©¥ Ìï¥Îãπ Îã®Í≥ÑÎßå ÍµêÏ≤¥)
      - name: Build JAR
        run: ./gradlew clean bootJar -x test

      # ---- üîê ÌÇ§ ÌååÏùº Î≥µÏõê (base64 ‚Üí pem) + fingerprint ÌôïÏù∏ ----
      - name: Write SSH key (from base64)
        env:
          EC2_SSH_KEY_B64: ${{ secrets.EC2_SSH_KEY }}
        run: |
          umask 077
          mkdir -p ~/.ssh
          # base64 ÎîîÏΩîÎìú
          echo "$EC2_SSH_KEY_B64" | base64 -d > ~/.ssh/id_ec2
          # CR Î¨∏Ïûê Ï†úÍ±∞(ÏúàÎèÑ Í∞úÌñâ ÎåÄÎπÑ)
          tr -d '\r' < ~/.ssh/id_ec2 > ~/.ssh/id_ec2.clean && mv ~/.ssh/id_ec2.clean ~/.ssh/id_ec2
          chmod 600 ~/.ssh/id_ec2
          # üîé ÏßÄÎ¨∏ ÌôïÏù∏(Î°úÍ∑∏Ïóê ÏïàÏ†ÑÌïòÍ≤å fingerprintÎßå Ï∂úÎ†•)
          echo "Fingerprint of restored key:"
          ssh-keygen -lf ~/.ssh/id_ec2 || true

      # Ìò∏Ïä§Ìä∏ ÌÇ§ Îì±Î°ù(Ï≤òÏùå Ï†ëÏÜçÏãú Known hosts ÏóêÎü¨ Î∞©ÏßÄ)
      - name: Add EC2 to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.EC2_SSH_PORT || 22 }}" "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      # EC2Î°ú ÌååÏùº Ï†ÑÏÜ°: JAR + Dockerfile + compose + deploy.sh
      - name: Copy files to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_PORT: ${{ secrets.EC2_SSH_PORT }}
        run: |
          PORT="${EC2_SSH_PORT:-22}"
          JAR="$(ls build/libs/*.jar | head -n1)"
          scp -i ~/.ssh/id_ec2 -P "$PORT" \
            "$JAR" Dockerfile deploy.sh \
            "${EC2_USER}@${EC2_HOST}:~/"


      # EC2ÏóêÏÑú ÏõêÍ≤© Î∞∞Ìè¨ Ïã§Ìñâ
      - name: Remote deploy on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_PORT: ${{ secrets.EC2_SSH_PORT }}
        run: |
          PORT="${EC2_SSH_PORT:-22}"
          ssh -i ~/.ssh/id_ec2 -p "$PORT" \
            "${EC2_USER}@${EC2_HOST}" \
            "bash ~/deploy.sh"
